//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ResearchersWPF.UI.svcArticle {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Article", Namespace="http://schemas.datacontract.org/2004/07/ResearchersWPF.Service.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Article : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MagazineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReleaseDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MagazineName {
            get {
                return this.MagazineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MagazineNameField, value) != true)) {
                    this.MagazineNameField = value;
                    this.RaisePropertyChanged("MagazineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="svcArticle.IArticleService")]
    public interface IArticleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticleByResearcher", ReplyAction="http://tempuri.org/IArticleService/GetArticleByResearcherResponse")]
        ResearchersWPF.UI.svcArticle.Article[] GetArticleByResearcher(int researcherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticleByResearcher", ReplyAction="http://tempuri.org/IArticleService/GetArticleByResearcherResponse")]
        System.Threading.Tasks.Task<ResearchersWPF.UI.svcArticle.Article[]> GetArticleByResearcherAsync(int researcherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/AddArticle", ReplyAction="http://tempuri.org/IArticleService/AddArticleResponse")]
        int AddArticle(int researcherId, ResearchersWPF.UI.svcArticle.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/AddArticle", ReplyAction="http://tempuri.org/IArticleService/AddArticleResponse")]
        System.Threading.Tasks.Task<int> AddArticleAsync(int researcherId, ResearchersWPF.UI.svcArticle.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/UpdateArticle", ReplyAction="http://tempuri.org/IArticleService/UpdateArticleResponse")]
        void UpdateArticle(ResearchersWPF.UI.svcArticle.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/UpdateArticle", ReplyAction="http://tempuri.org/IArticleService/UpdateArticleResponse")]
        System.Threading.Tasks.Task UpdateArticleAsync(ResearchersWPF.UI.svcArticle.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/DeleteArticle", ReplyAction="http://tempuri.org/IArticleService/DeleteArticleResponse")]
        void DeleteArticle(int articleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/DeleteArticle", ReplyAction="http://tempuri.org/IArticleService/DeleteArticleResponse")]
        System.Threading.Tasks.Task DeleteArticleAsync(int articleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticle", ReplyAction="http://tempuri.org/IArticleService/GetArticleResponse")]
        ResearchersWPF.UI.svcArticle.Article GetArticle(int articleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticle", ReplyAction="http://tempuri.org/IArticleService/GetArticleResponse")]
        System.Threading.Tasks.Task<ResearchersWPF.UI.svcArticle.Article> GetArticleAsync(int articleId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IArticleServiceChannel : ResearchersWPF.UI.svcArticle.IArticleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ArticleServiceClient : System.ServiceModel.ClientBase<ResearchersWPF.UI.svcArticle.IArticleService>, ResearchersWPF.UI.svcArticle.IArticleService {
        
        public ArticleServiceClient() {
        }
        
        public ArticleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ArticleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ArticleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ArticleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ResearchersWPF.UI.svcArticle.Article[] GetArticleByResearcher(int researcherId) {
            return base.Channel.GetArticleByResearcher(researcherId);
        }
        
        public System.Threading.Tasks.Task<ResearchersWPF.UI.svcArticle.Article[]> GetArticleByResearcherAsync(int researcherId) {
            return base.Channel.GetArticleByResearcherAsync(researcherId);
        }
        
        public int AddArticle(int researcherId, ResearchersWPF.UI.svcArticle.Article article) {
            return base.Channel.AddArticle(researcherId, article);
        }
        
        public System.Threading.Tasks.Task<int> AddArticleAsync(int researcherId, ResearchersWPF.UI.svcArticle.Article article) {
            return base.Channel.AddArticleAsync(researcherId, article);
        }
        
        public void UpdateArticle(ResearchersWPF.UI.svcArticle.Article article) {
            base.Channel.UpdateArticle(article);
        }
        
        public System.Threading.Tasks.Task UpdateArticleAsync(ResearchersWPF.UI.svcArticle.Article article) {
            return base.Channel.UpdateArticleAsync(article);
        }
        
        public void DeleteArticle(int articleId) {
            base.Channel.DeleteArticle(articleId);
        }
        
        public System.Threading.Tasks.Task DeleteArticleAsync(int articleId) {
            return base.Channel.DeleteArticleAsync(articleId);
        }
        
        public ResearchersWPF.UI.svcArticle.Article GetArticle(int articleId) {
            return base.Channel.GetArticle(articleId);
        }
        
        public System.Threading.Tasks.Task<ResearchersWPF.UI.svcArticle.Article> GetArticleAsync(int articleId) {
            return base.Channel.GetArticleAsync(articleId);
        }
    }
}
